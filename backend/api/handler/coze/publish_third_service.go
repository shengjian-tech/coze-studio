/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by hertz generator.

package coze

import (
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/coze-dev/coze-studio/backend/api/model/publishThird"
	publishThird_commion "github.com/coze-dev/coze-studio/backend/api/model/publishThird/commion"
)

// PublishToXHS .
// @router /api/publish_to_third/publish_to_xhs [POST]
func PublishToXHS(ctx context.Context, c *app.RequestContext) {
	var err error
	var req publishThird.GetXHSRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		invalidParamRequestResponse(c, err.Error())
		return
	}

	resp := &publishThird.PublishThirdResponse[publishThird.XHSData]{
		Code:    0,
		Message: "ok",
		Data: publishThird.XHSData{
			LoginQr:    "...",
			PublishUrl: "...",
		},
	}
	switch req.GetPublishType() {
	case publishThird_commion.PublishThirdType_XSH:
		//小红书发布逻辑
		//resp, err = publishThird.PluginApplicationSVC.PublicGetProductList(ctx, &req)
		//if err != nil {
		//	internalServerErrorResponse(ctx, c, err)
		//	return
		//}

	}

	c.JSON(consts.StatusOK, resp)
}
